<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.stb.camunda.plugin</groupId>
	<artifactId>camunda-plugin</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>Camunda Plugin</name>

	<properties>
		<camunda.version>7.15.0</camunda.version>

		<!-- This property must be present for the pom.xml to be recognized as a plugin -->
		<camunda.plugin.category>Sample</camunda.plugin.category>

		<camunda.plugin.screenshot>screenshot.png</camunda.plugin.screenshot>
		<camunda.plugin.testedOnVersion>7.15.0</camunda.plugin.testedOnVersion>
		<camunda.plugin.language>EN</camunda.plugin.language>

		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<frontend-maven-plugin.version>1.10.0</frontend-maven-plugin.version>
		<maven-resources-plugin.version>3.1.0</maven-resources-plugin.version>
		<node.version>v14.18.0</node.version>

		<frontend.working.directory>frontend/</frontend.working.directory>
		<frontend.build.path>${frontend.working.directory}dist/</frontend.build.path>
		<!-- <frontend.target.path>plugin-webapp/sample-plugin/app</frontend.target.path> -->
		<frontend.target.path>plugin-webapp/cockpit-plugin/app</frontend.target.path>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.camunda.bpm.webapp</groupId>
			<artifactId>camunda-webapp</artifactId>
			<classifier>classes</classifier>
			<version>${camunda.version}</version>
		</dependency>
		<dependency>
			<groupId>org.jboss.spec</groupId>
			<artifactId>jboss-javaee-6.0</artifactId>
			<type>pom</type>
			<scope>provided</scope>
			<version>3.0.2.Final</version>
		</dependency>
		<!-- test dependencies -->
		<dependency>
			<groupId>org.camunda.bpm</groupId>
			<artifactId>camunda-engine</artifactId>
			<version>${camunda.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>1.3.171</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
		<!-- redirect slf4j logging to jdk logging -->
		<!-- <dependency> <groupId>org.slf4j</groupId> <artifactId>slf4j-jdk14</artifactId> <version>1.7.12</version> <scope>test</scope> </dependency> -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>2.14.1</version>
		</dependency>

		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>2.14.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-core</artifactId>
			<version>2.23.2</version>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-jsonpath</artifactId>
			<version>2.23.2</version>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-spring</artifactId>
			<version>2.23.2</version>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-jdbc</artifactId>
			<version>2.23.2</version>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>1.4.190</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-dbcp2</artifactId>
			<version>2.9.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-gson</artifactId>
			<version>2.23.2</version>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-spring-boot-starter</artifactId>
			<version>2.23.2</version>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-jdbc-starter</artifactId>
			<version>2.23.2</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.12.0</version>
		</dependency>
	</dependencies>

	<repositories>
		<repository>
			<id>maven2</id>
			<name>maven2</name>
			<url>https://repo1.maven.org/maven2/</url>
		</repository>
		<repository>
			<id>redhat</id>
			<name>redhat</name>
			<url>https://maven.repository.redhat.com/ga/</url>
		</repository>
	</repositories>

	<build>
		<plugins>
			<plugin>
				<groupId>com.github.eirslett</groupId>
				<artifactId>frontend-maven-plugin</artifactId>
				<version>${frontend-maven-plugin.version}</version>
				<configuration>
					<nodeVersion>v14.18.0</nodeVersion>
					<npmVersion>6.14.15</npmVersion>
					<workingDirectory>${frontend.working.directory}</workingDirectory>
				</configuration>
				<executions>
					<execution>
						<id>Install node and npm locally to the project</id>
						<goals>
							<goal>install-node-and-npm</goal>
						</goals>
					</execution>
					<execution>
						<id>npm install</id>
						<goals>
							<goal>npm</goal>
						</goals>
					</execution>
					<execution>
						<id>Build frontend</id>
						<goals>
							<goal>npm</goal>
						</goals>
						<configuration>
							<arguments>run build</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${maven-resources-plugin.version}</version>
				<executions>
					<execution>
						<id>Copy frontend build to target</id>
						<phase>process-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/target/classes/${frontend.target.path}</outputDirectory>
							<resources>
								<resource>
									<directory>${basedir}/${frontend.build.path}</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<phase>install</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/lib</outputDirectory>
							<excludeArtifactIds>spring-boot, spring-boot-loader-tools, spring-boot-autoconfigure, tomcat-embed-websocket, tomcat-embed-el,
								tomcat-embed-core, logback-classic, logback-core, slf4j-api, jul-to-slf4j, spring-webmvc, spring-orm, spring-web, spring-jdbc, spring-tx,
								spring-context, spring-aop, spring-beans, spring-expression, spring-jcl, jackson-jaxrs-json-provider, jackson-jaxrs-base,
								jackson-datatype-jdk8, jackson-module-parameter-names, jackson-datatype-jsr310, jackson-module-jaxb-annotations, jackson-databind,
								jackson-core, jackson-annotations, jboss-logging, jersey-spring5, jersey-bean-validation, jersey-media-json-jackson, jersey-entity-filtering,
								jersey-container-servlet, jersey-container-servlet-core, jersey-server, jersey-client, jersey-hk2, jersey-common, camunda-identity-ldap,
								camunda-engine-rest-jaxrs2, camunda-bpm-spring-boot-starter, camunda-engine-plugin-spin, camunda-engine-spring, camunda-engine,
								camunda-engine-dmn, camunda-engine-feel-scala, camunda-engine-feel-juel, camunda-engine-feel-api, camunda-dmn-model,
								camunda-commons-typed-values, camunda-cmmn-model, camunda-bpmn-model, camunda-xml-model, feel-engine, log4j-to-slf4j, log4j-api, HikariCP,
								snakeyaml, camunda-spin-core, camunda-spin-dataformat-all, camunda-connect-core, camunda-connect-connectors-all, hibernate-validator,
								camunda-commons-utils, camunda-commons-logging, mybatis, jakarta.activation-api, commons-compress, jakarta.xml.bind-api, commons-lang3,
								commons-io, classmate, hk2, spring-bridge, class-model, hk2-runlevel, hk2-core, hk2-locator, hk2-api, hk2-utils, aopalliance-repackaged,
								jakarta.inject, jakarta.ws.rs-api, jakarta.validation-api, jakarta.annotation-api, javassist, java-uuid-generator, asm-util, asm-commons,
								asm-tree, asm-analysis, asm, osgi-resource-locator, commons-fileupload, joda-time, commons-pool, commons-dbcp, tomcat-annotations-api,
								spring-core, spring-boot-jarmode-layertools, jboss-javaee-6.0, camunda-webapp, validation-api, commons-lang3</excludeArtifactIds>
							<excludeGroupIds>org.jboss.spec, camunda-webapp</excludeGroupIds>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<!-- <repositories> <repository> <id>camunda-bpm-nexus</id> <name>camunda-bpm-nexus</name> <url>https://app.camunda.com/nexus/content/groups/public</url> 
		</repository> </repositories> -->
</project>
